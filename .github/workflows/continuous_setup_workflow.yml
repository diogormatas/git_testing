name: Continuous Setup

on:
  push:
    branches:
      - master

jobs:
  job_setup:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.x
          
      - name: Create tools.config file
        run: |
          > tools.config
          
      - name: Loop tool folders and run setup
        id: setup
        run: |
          for folder in */; do
            tool_name=$(basename "$folder")
            echo "Running setup for ${folder}"
            cd "$folder"
            if [ -f "requirements.txt" ]; then
              pip install -r requirements.txt
            fi
            if [ -f "setup.py" ]; then
               if python setup.py; then
                echo "setup_${tool_name}=true" >> ../tools.config
              else
                echo "setup_${tool_name}=false" >> ../tools.config
              fi
            fi
            cd ..
          done
          

  job_tests:
    runs-on: ubuntu-latest
    needs: job_setup
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.x
      
      - name: Read tools.config file
        id: read_tools_config
        run: |
          while IFS= read -r line; do
            variable=$(echo "$line" | awk -F '=' '{print $1}')
            value=$(echo "$line" | awk -F '=' '{print $2}')
            echo "$variable=$value" >> $GITHUB_ENV
          done < tools.config

      - name: Use variables in the next step
        run: |
          echo "Variable 1: ${{ env.setup_dbt }}"
          echo "Variable 1: ${{ env.setup_snowflake }}"
          echo "Variable 1: ${{ env.setup_sharepoint }}"

      
      - name: Loop tool folders and run tests
        id: tests
        run: |
          for folder in */; do
            tool_name=$(basename "$folder")
            tool_name_setup="setup_${tool_name}"
            tool_setup="${{ env['setup_dbt'] }}"
            echo ">>>>>>$tool_setup<<<<<"  
            if [ "$tool_setup" == "true" ]; then
              echo "Running tests for ${folder}"
              cd "$folder"
              if [ -f "requirements.txt" ]; then
                pip install -r requirements.txt
              fi
              if [ -f "tests.py" ]; then
                python tests.py
              fi
              cd ..
            fi
          done
