name: Continuous Setup

on:
  push:
    branches:
      - master

jobs:
  job_setup:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.x

      - name: Install dependencies
        run: pip install -r requirements.txt

      - name: Find tool folders
        id: find_folders
        run: |
          echo "::set-output name=folders::$(find . -type d -not -path './.git/*' -not -name 'template')"

      - name: Loop tool folders and run setup
        id: setup
        run: |
          for folder in ${{ steps.find_folders.outputs.folders }}; do
            tool_name=$(basename "$folder")
            if [ "$tool_name" != "template" ]; then
              echo "Running setup for ${tool_name}"
              python "$folder/setup.py"
              echo "::set-output name=setup_${tool_name}::true"
            fi
          done

  job_tests:
    runs-on: ubuntu-latest
    needs: job_setup
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.x

      - name: Install dependencies
        run: pip install -r requirements.txt

      - name: Find tool folders
        id: find_folders
        run: |
          echo "::set-output name=folders::$(find . -type d -not -path './.git/*' -not -name 'template')"

      - name: Loop tool folders and run tests
        id: tests
        run: |
          for folder in ${{ steps.find_folders.outputs.folders }}; do
            tool_name=$(basename "$folder")
            if [ "$tool_name" != "template" ]; then
              if [ "${{ needs.job_setup.outputs.setup_${tool_name} }}" == "true" ]; then
                echo "Running tests for ${tool_name}"
                python "$folder/tests.py"
              else
                echo "Skipping tests for ${tool_name} as setup was not successful"
              fi
            fi
          done
